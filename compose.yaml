version: "3.8"
services:
  postgres:
    build:
        context: ./postgres
        dockerfile: Dockerfile  
    # ports:
    #   - "5432:5432"
    env_file:
      - env_files/db.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # Überschreibe den Startbefehl, sodass der Custom-Config-File genutzt wird
    command: postgres -c config_file=/etc/postgresql/postgres.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  redis:
    image: redis
    # ports:
    #   - "6379:6379"
    volumes:
      - redis_data:/data

  medusa-server:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
    env_file:
      - env_files/medusaserver.env
    ports:
      - "9000:9000"
    command: >
      sh -c "cd .medusa/server && npm run predeploy && npm run start"
    healthcheck:
      test: ["CMD-SHELL", "curl -f localhost:9000/health || exit 1"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  medusa-worker:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_started
      # Warte zusätzlich, bis medusa-server "healthy" ist
      medusa-server:
        condition: service_healthy
    env_file:
      - env_files/medusaworker.env
    command: >
      sh -c "cd .medusa/server && npm run predeploy && npm run start"

  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=pk@test.de
  #     - PGADMIN_DEFAULT_PASSWORD=xxx
  #   ports:
  #     - "5050:80"
  #   restart: unless-stopped

volumes:
  postgres_data:
  redis_data: